# directories
$dcommon			= [ $*/../common ]
$dliblistwise	= [ $* ]

# variable defs, $cc, $cflags, etc
# common targets xmem, map, etc
$libname = [ liblistwise.so ]
$lib     = [ $dliblistwise/liblistwise.so ~ j ]		# name of the library

+[ $dcommon/vars.fab ]
+[ $dcommon ]($cc; -$cflags) @common

##
## variables
##
$cflags	= [ $cflags, [ $dliblistwise ~ lsr/xm/<h>/dn/ss/u/s/^/-I ] ]
$lflags	= [ -lpcre, -ldl, $solflags ]

# source files
+[@std.c]($rdirs = $dliblistwise; -$cfabpaths; $cc $cflags)
+[@std.l]($rdirs = $dliblistwise; -$lfabpaths; $cc $cflags $flex $flexflags)
+[@std.y]($rdirs = $dliblistwise; -$yfabpaths; $cc $cflags $bison $bisonflags)

# path to each operator so
$oplist	= [ $dliblistwise ~ s/$/\/op/lsr/m/</op\.c>/v/xs/<c>/<so>/y ]

##
## dependencies
##

# default NOFILE target - build library and all operators
[ @all ] : [ $lib $oplist ]

# library depends on .o for each c, l, and y
[ $lib ] : [ [ $cfabpaths ~ xs/<c>/<o>/y/m/</op/>/v ] [ $dliblistwise/op/op.o ~ j ] ]
[ $lib ] : [ $lfabpaths ~ xs/<l>/<lex.o>/y ]
[ $lib ] : [ $yfabpaths ~ xs/<y>/<tab.o>/y ]

##
## formulas
##

# link the library
[ $lib ] : [ exports ]
{
	[ $cc ] [ $cflags ~ ss/u/fx ] -o [ $@ ] [ $@ ~ rx/aneedw/xm/<o>/ss/u/fx ] [ $lflags ]
}

# library exports
[ exports ] :
{
	  exec 1>[ $@ ~ ss ]
	  echo "{ global: "
	> sed 's/.*API\(DATA\)\?[[:space:]]\+\([a-zA-Z][0-9a-zA-Z_]*\).*/\2;/p; d' <(\
	  cat -- [ $# ~ lsr/m/</op/[^/]+/>/v/xm/<c> ] )
	> echo "local: *; };"
}

# link an operator so - which depends on its own .o
[ $oplist ~ dj/shift ] :: [ $< ~ rx/xs/<o> ]
{
	[ $cc ] [ $cflags ~ ss/u/fx ] -o [ $@ ]			\
	[ $@ ~ rx/aneedw/xm/<o>/ss/u/fx ]						\
	[ -L$dliblistwise ] -llistwise -shared			\
	[ "-Wl,-soname," [ $@ ~ rx/bn/fn ] .so ]
}

##
## tasks
##

[ @install ] : [ @all ]
{
	install -d																				[ $destdir/$libdir ]
	install	[ $lib ]																	[ $destdir/$libdir/$libname.0.1 ]
	ln -vfs [ $libname.0.1 ]													[ $destdir/$libdir/$libname ]
	install -d																				[ $destdir/$incdir ]
	install -d																				[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise.h	]							[ $destdir/$incdir/listwise.h ]
	install [ $dliblistwise/listwise/operator.h ]			[ $destdir/$incdir/listwise/operator.h ]
	install [ $dliblistwise/listwise/generator.h	] 	[ $destdir/$incdir/listwise/generator.h ]
	install [ $dliblistwise/listwise/ops.h ]					[ $destdir/$incdir/listwise/ops.h ]
	install [ $dliblistwise/listwise/lstack.h ] 			[ $destdir/$incdir/listwise/lstack.h ]
	install [ $dliblistwise/listwise/object.h ] 			[ $destdir/$incdir/listwise/object.h ]

	install -d																				[ $destdir/$dlibdir/listwise ]
	for x in [ $oplist ]; do \
		install $x																			[ $destdir/$dlibdir/listwise ]
	done
}

[ @uninstall ]
{
	rm -f																							[ $destdir/$libdir/$libname.0.1 ]
	rm -f																							[ $destdir/$libdir/$libname ]
	rm -rf																						[ $destdir/$dlibdir/listwise ]
	rm -f																							[ $destdir/$incdir/listwise.h ]
}

[ @clean ] : [ @common.clean ]
{
	find [ $dliblistwise ] -name '*.o' -delete
	find [ $dliblistwise ] -name '*.so' -delete
	find [ $dliblistwise ] -name '*.lex.*' -delete
	find [ $dliblistwise ] -name '*.tab.*' -delete
	find [ $dliblistwise ] -name exports -delete
}
