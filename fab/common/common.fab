/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

once {
	+[ $*/../../vars.fab ]

	# variables
	$sdirs = [ [ $dfabcore/common ~ j ] ~ lsr c -d ]
	$cflags = [ -fno-builtin-log [ $sdirs ~ s/^/-I ]
		[ -DFABVERSIONS="\""$VERSIONS"\"" ~ j ]
		[ -DFABVERSIONN="\""$VERSIONN"\"" ~ j ]

		# include paths
		[ $dlibxapi $dlibxlinux $dliblistwise $dlibpstring ~ s/^/-I ]
	]

	$params = [
		[ -DFABLWOPDIR="\""$fablwopdir"\"" ~ j ]
		[ -DFABINVOKEDIR="\""$fabinvokedir"\"" ~ j ]
		[ -DFABTMPDIR="\""$fabtmpdir"\"" ~ j ]
		[ -DFABIPCDIR="\""$fabipcdir"\"" ~ j ]
	]

	$params_devel = [
		[ -DFABLWOPDIR="\""$fablwopdir_devel"\"" ~ j ]
		[ -DFABINVOKEDIR="\""$fabinvokedir_devel"\"" ~ j ]
		[ -DFABTMPDIR="\""$fabtmpdir_devel"\"" ~ j ]
		[ -DFABIPCDIR="\""$fabipcdir_devel"\"" ~ j ]
	]

	$cflags_eapi_final = [ $cflags_eapi_final $cflags $params ]
	$cflags_eapi_debug = [ $cflags_eapi_debug $cflags $params ]
	$cflags_eapi_devel = [ $cflags_eapi_devel $cflags $params_devel ]
	$cflags_xapi_final = [ $cflags_xapi_final $cflags $params ]
	$cflags_xapi_debug = [ $cflags_xapi_debug $cflags $params ]
	$cflags_xapi_devel = [ $cflags_xapi_devel $cflags $params_devel ]

	# standard files - standard nopic compilation
	+[@std.c]($dirs = $sdirs; $cc; $dext = [ eapi.final.o ]; $cflags = $cflags_eapi_final)
	+[@std.c]($dirs = $sdirs; $cc; $dext = [ eapi.debug.o ]; $cflags = $cflags_eapi_debug)
	+[@std.c]($dirs = $sdirs; $cc; $dext = [ eapi.devel.o ]; $cflags = $cflags_eapi_devel)
	+[@std.c]($dirs = $sdirs; $cc; $dext = [ xapi.final.o ]; $cflags = $cflags_xapi_final)
	+[@std.c]($dirs = $sdirs; $cc; $dext = [ xapi.debug.o ]; $cflags = $cflags_xapi_debug)
	+[@std.c]($dirs = $sdirs; $cc; $dext = [ xapi.devel.o ]; $cflags = $cflags_xapi_devel)

	# generated
	+[@std.xapi.errtab]($dext = [ eapi.final.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_eapi_final)
	+[@std.xapi.errtab]($dext = [ eapi.debug.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_eapi_debug)
	+[@std.xapi.errtab]($dext = [ eapi.devel.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_eapi_devel)
	+[@std.xapi.errtab]($dext = [ xapi.final.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_xapi_final)
	+[@std.xapi.errtab]($dext = [ xapi.debug.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_xapi_debug)
	+[@std.xapi.errtab]($dext = [ xapi.devel.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_xapi_devel)
}
