/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.

   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# definitions
+[ $*/../vars.fab ]

# source invocations
+[ $dfab ]()      @fab
+[ $dfabw ]()     @fabw
+[ $dfabd ]()     @fabd
+[ $dlibfab]()    @libfab

# variables
$sdirs = [ $dfabd [ $dfabroot/common ~ j ] ~ lsr c -d ]

$cflags = [ -fno-builtin-log [ $sdirs ~ s/^/-I ]
  [ -DFABVERSIONS="\""$VERSIONS"\"" ~ j ]
  [ -DFABVERSIONN="\""$VERSIONN"\"" ~ j ]

  # include paths - mark as system to preclude dependency discovery from gcc
  [ $dlibxapi $dlibxlinux $dlibpstring ~ s/^/-I ]
]

$params = [
  [ -DFABLWOPDIR="\""$fablwopdir"\"" ~ j ]
  [ -DFABINVOKEDIR="\""$fabinvokedir"\"" ~ j ]
  [ -DFABTMPDIR="\""$fabtmpdir"\"" ~ j ]
  [ -DFABIPCDIR="\""$fabipcdir"\"" ~ j ]
]

$params_devel = [
  [ -DFABLWOPDIR="\""$fablwopdir_devel"\"" ~ j ]
  [ -DFABINVOKEDIR="\""$fabinvokedir_devel"\"" ~ j ]
  [ -DFABTMPDIR="\""$fabtmpdir_devel"\"" ~ j ]
  [ -DFABIPCDIR="\""$fabipcdir_devel"\"" ~ j ]
]

$cflags_xapi_final = [ $cflags_xapi_final $cflags $params ]
$cflags_xapi_debug = [ $cflags_xapi_debug $cflags $params ]
$cflags_xapi_devel = [ $cflags_xapi_devel $cflags $params_devel ]

# operator so's
$faboplist_xapi_final = [ $dfabroot/fablw/op ~ j lsr sx/c/xapi.final.so sy ]
$faboplist_xapi_debug = [ $dfabroot/fablw/op ~ j lsr sx/c/xapi.debug.so sy ]
$faboplist_xapi_devel = [ $dfabroot/fablw/op ~ j lsr sx/c/xapi.devel.so sy ]

#
# catchall node
#
[ @all ] : [ @all.xapi ]
[ @all.xapi ] : [ @final.xapi @debug.xapi @devel.xapi ]
[ @final ] : [ @final.xapi ]
[ @final.xapi ] : [ @fab.final @fabw.final @fabd.final @libfab.final $faboplist_xapi_final ]
[ @debug ] : [ @debug.xapi ]
[ @debug.xapi ] : [ @fab.debug @fabw.debug @fabd.debug @libfab.debug $faboplist_xapi_debug ]
[ @devel ] : [ @devel.xapi ]
[ @devel.xapi ] : [ @fab.devel @fabw.devel @fabd.devel @libfab.devel $faboplist_xapi_devel ]

#
# standard files - fPIC compilation
#  no discovery on these files, because they would then depend on *.pic.o files within fab which
#  do not exist ; instead those link-time references are satisfied by the fabd executable
#
+[@std.c]($dext = [ xapi.final.pic.o ]; $rfabdirs = [ $dfabroot/fablw ~ j ]; $cc; $cflags = [ $cflags_xapi_final -fPIC ]; -$cobjpaths)
[ $cobjpaths ] : [ $fabd_final ]
+[@std.c]($dext = [ xapi.debug.pic.o ]; $rfabdirs = [ $dfabroot/fablw ~ j ]; $cc; $cflags = [ $cflags_xapi_debug -fPIC ]; -$cobjpaths)
[ $cobjpaths ] : [ $fabd_debug ]
+[@std.c]($dext = [ xapi.devel.pic.o ]; $rfabdirs = [ $dfabroot/fablw ~ j ]; $cc; $cflags = [ $cflags_xapi_devel -fPIC ]; -$cobjpaths)
[ $cobjpaths ] : [ $fabd_devel ]

#
# fab-specific operator so's - only link the immediate object. This so depends on fab for many symbols
#
[ $faboplist_xapi_final ~ dj shift ] :: [ $< ~ rx sx/pic.o ]
{
  [ $cc ] [ $cflags_xapi_final ~ uu fi ] -o [ $@ ]  [ $@ ~ rx/ineed fi ] -shared
}

[ $faboplist_xapi_debug ~ dj shift ] :: [ $< ~ rx sx/pic.o ]
{
  [ $cc ] [ $cflags_xapi_debug ~ uu fi ] -o [ $@ ]  [ $@ ~ rx/ineed fi ] -shared
}

[ $faboplist_xapi_devel ~ dj shift ] :: [ $< ~ rx sx/pic.o ]
{
  [ $cc ] [ $cflags_xapi_devel ~ uu fi ] -o [ $@ ]  [ $@ ~ rx/ineed fi ] -shared
}

# also a bridge dependency on the fabd executable
[ $faboplist_xapi_final ] ::^ [ $fabd_final ]
[ $faboplist_xapi_debug ] ::^ [ $fabd_debug ]
[ $faboplist_xapi_devel ] ::^ [ $fabd_devel ]

#
# tasks
#

# build the man gz
[ @man ] : [ $dfabroot/man/fab.1.gz ~ j ]
[ $dfabroot/man/fab.1.gz ~ j ] : [ $dfabroot/man/fab.1 ~ j ]
{
  cat [ $dfabroot/man/fab.1 ] [
  ] | sed -e 's/---BUILDVERS---/[ $VERSIONS ]/' [
  ] | sed -e 's/---BUILDDATE---/[ $^starttime ~ datef/%Y-%m-%d ]/' [
  ] | gzip -9c > [ $@ ]
}
