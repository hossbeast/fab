/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.

   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# definitions
+[ $*/../../vars.fab ]

# source invocations
+[ $dcommon ]() @common

# variables
$basename     = [ fab ]
$libname_xapi = [ lib $basename -xapi .so ~ j ]
$copts        = [ -fPIC
  # include paths
  [ [ $* ~ lsr c -d ] $dlibxapi $dlibxlinux $dliblogger $dliblorien $dlibnarrator ~ s/^/-I ]
]

$params = [
  [ -DFABLWOPDIR="\""$fablwopdir"\"" ~ j ]
  [ -DFABINVOKEDIR="\""$fabinvokedir"\"" ~ j ]
  [ -DFABTMPDIR="\""$fabtmpdir"\"" ~ j ]
  [ -DFABIPCDIR="\""$fabipcdir"\"" ~ j ]
]

$params_devel = [
  [ -DFABLWOPDIR="\""$fablwopdir_devel"\"" ~ j ]
  [ -DFABINVOKEDIR="\""$fabinvokedir_devel"\"" ~ j ]
  [ -DFABTMPDIR="\""$fabtmpdir_devel"\"" ~ j ]
  [ -DFABIPCDIR="\""$fabipcdir_devel"\"" ~ j ]
]

# cflags variants
$cflags_xapi_final = [ $cflags_xapi_final $copts $params ]
$cflags_xapi_debug = [ $cflags_xapi_debug $copts $params ]
$cflags_xapi_devel = [ $cflags_xapi_devel $copts $params_devel ]

$lopts              = [ -shared [ -Wl,--version-script=$*/exports ~ j ] ]
$lflags_xapi_final  = [ $lopts $libxapi_xapi_final $libxlinux_xapi_final $liblogger_xapi_final $liblorien_xapi_final $libnarrator_xapi_final [ -Wl,-soname,libfab-xapi.so ~ j ] ]
$lflags_xapi_debug  = [ $lopts $libxapi_xapi_debug $libxlinux_xapi_debug $liblogger_xapi_debug $liblorien_xapi_debug $libnarrator_xapi_debug [ -Wl,-soname,libfab-xapi.so ~ j ] ]
$lflags_xapi_devel  = [ $lopts $libxapi_xapi_devel $libxlinux_xapi_devel $liblogger_xapi_devel $liblorien_xapi_devel $libnarrator_xapi_devel [ -Wl,-soname,libfab-xapi-devel.so ~ j ] ]

# source files, filter out tests
+[@std.c]($dext = [ xapi.final.pic.o ]; $rdirs = [ $* ~ ls l/test d ]; $cc; $cflags = $cflags_xapi_final)
+[@std.c]($dext = [ xapi.debug.pic.o ]; $rdirs = [ $* ~ ls l/test d ]; $cc; $cflags = $cflags_xapi_debug)
+[@std.c]($dext = [ xapi.devel.pic.o ]; $rdirs = [ $* ~ ls l/test d ]; $cc; $cflags = $cflags_xapi_devel)
+[@std.xapi.errtab]($dext = [ xapi.final.pic.o ]; $rdirs = $*; $cc; $cflags = $cflags_xapi_final; $apidata = [1])
+[@std.xapi.errtab]($dext = [ xapi.debug.pic.o ]; $rdirs = $*; $cc; $cflags = $cflags_xapi_debug; $apidata = [1])
+[@std.xapi.errtab]($dext = [ xapi.devel.pic.o ]; $rdirs = $*; $cc; $cflags = $cflags_xapi_devel; $apidata = [1])

##
## dependencies
##

# default NOFILE target - build everything
[ @release ] : [ @all ]

[ @all ] : [ @final @debug @devel ]
[ @final ] : [ $libfab_xapi_final ]
[ @debug ] : [ $libfab_xapi_debug ]
[ @devel ] : [ $libfab_xapi_devel ]

##
## formulas
##

# library exports
[ $*/exports ~ j ] : [ $* ~ lsr lx/c ]
{
    (echo "{ global: "
  > perl -ne 'if(/API(?:DATA)?.*? ([a-zA-Z_][a-zA-Z0-9_]+) *(?:\(|=|;|\[)/) { print "$1;\n" }' <(\
    cat -- [ $@ ~ rx/ineed fi ] )
  > echo "local: *; };"
   ) 1>[ $@ ]
}

# link the library

[ $libfab_xapi_final ] : [ [ $*/exports ~ j ] [ $* ~ ls l/test d lsr sx/c/xapi.final.pic.o sy ] ]
{
  [ $cc ] [ $cflags_xapi_final ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw lx/o ss u fi ] [ $lflags_xapi_final ~ fi ]
}

[ $libfab_xapi_debug ] : [ [ $*/exports ~ j ] [ $* ~ ls l/test d lsr sx/c/xapi.debug.pic.o sy ] ]
{
  [ $cc ] [ $cflags_xapi_debug ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw lx/o ss u fi ] [ $lflags_xapi_debug ~ fi ]
}

[ $libfab_xapi_devel ] : [ [ $*/exports ~ j ] [ $* ~ ls l/test d lsr sx/c/xapi.devel.pic.o sy ] ]
{
  [ $cc ] [ $cflags_xapi_devel ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw lx/o ss u fi ] [ $lflags_xapi_devel ~ fi ]
}

[ $libfab_xapi_final ] :^ [ $libxapi_xapi_final $libxlinux_xapi_final $liblogger_xapi_final $liblorien_xapi_final $libnarrator_xapi_final ]
[ $libfab_xapi_debug ] :^ [ $libxapi_xapi_debug $libxlinux_xapi_debug $liblogger_xapi_debug $liblorien_xapi_debug $libnarrator_xapi_debug ]
[ $libfab_xapi_devel ] :^ [ $libxapi_xapi_devel $libxlinux_xapi_devel $liblogger_xapi_devel $liblorien_xapi_devel $libnarrator_xapi_devel ]
