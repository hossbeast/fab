statement
	: varassign
	| invocation
	| dependency
	| fabrication
	| discovery
	| onceblock
	;

onceblock
	: ONCE '{' statements '}'
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_ONCEBLOCK, $3);
	}
	;

varassign
	: varrefs '=' list
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_VARASSIGN, $1, $3);
	}
	;

invocation
	: '+' list
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_INVOCATION, $2, (void*)0, (void*)0, 0);
	}
	| '+' list nofile
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_INVOCATION, $2, (void*)0, $3, 0);
	}
	| '+' list '(' ')'
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_INVOCATION, $2, (void*)0, (void*)0, FFN_SUBCONTEXT);
	}
	| '+' list '(' ')' nofile
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_INVOCATION, $2, (void*)0, $5, FFN_SUBCONTEXT);
	}
	| '+' list '(' varsettings ')'
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_INVOCATION, $2, $4, (void*)0, FFN_SUBCONTEXT);
	}
	| '+' list '(' varsettings ')' nofile
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_INVOCATION, $2, $4, $6, FFN_SUBCONTEXT);
	}
	;

varsettings
	: varsettings ';' varsetting
	{
		$$ = ffn_addchain($1, $3);
	}
	| varsetting
	;

varsetting
	: varlock
	| varlink
	;

varlock
	: varref '=' list
	{
		/* list assignment */
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_VARLOCK, $1, $3);
	}
	| varref '=' varref
	{
		/* cross-name alias */
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_VARLOCK, $1, $3);
	}
	| varrefs
	{
		/* same-name alias */
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_VARLOCK, $1, (void*)0);
	}
	;

varlink
	: varref '-' varref
	{
		/* cross-name link */
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_VARLINK, $1, $3);
	}
	| '-' varrefs
	{
		/* same-name link */
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_VARLINK, $2, (void*)0);
	}
	;

fabrication
	: dependency '{' command '}'
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_FORMULA, (void*)0, $1->needs, $3, $1->flags | FFN_FABRICATION);
		$$ = ffn_addchain($1, $$);
	}
	| list '{' command '}'
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_FORMULA, $1, (void*)0, $3, FFN_SINGLE | FFN_FABRICATION);
	}
	| list ':' '{' command '}'
	{
		/* this form is redundant but is included for completeness */
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_FORMULA, $1, (void*)0, $4, FFN_SINGLE | FFN_FABRICATION);
	}
	| list ':' ':' '{' command '}'
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_FORMULA, $1, (void*)0, $5, FFN_MULTI | FFN_FABRICATION);
	}
	;

discovery
	: list '%' '{' command '}'
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_FORMULA, $1, (void*)0, $4, FFN_SINGLE | FFN_DISCOVERY);
	}
	;

command
	: commandparts
	{
		YYU_FATAL(ffn_mknode, &$$, &@$, FFN_LIST, $1, (void*)0, (void*)0);
	}
	;

commandparts
	: commandparts commandpart
	{
		$$ = ffn_addchain($1, $2);
	}
	| commandpart
	;

commandpart
	: list
	| word %prec WORD
	;

varrefs
	: varrefs varref
	{
		$$ = ffn_addchain($1, $2);
	}
	| varref
	;
