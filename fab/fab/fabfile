/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# definitions
+[ $*/../../vars.fab ]

# source invocations
+[ $dcommon ]() @common

# variables
$copts = [ -fno-builtin-log
  [ -DFABVERSIONS="\""$VERSIONS"\"" ~ j ]
  [ -DFABVERSIONN="\""$VERSIONN"\"" ~ j ]
  [ [ $* ~ lsr c -d ] $dlibxapi $dlibxlinux $dliblistwise $dlibvalyria $dliblogger $dlibnarrator $dlibfabcore $dliblorien ~ s/^/-I ]
]

$params = [
  [ -DFABLWOPDIR="\""$fablwopdir"\"" ~ j ]
  [ -DFABINVOKEDIR="\""$fabinvokedir"\"" ~ j ]
  [ -DFABTMPDIR="\""$fabtmpdir"\"" ~ j ]
  [ -DFABIPCDIR="\""$fabipcdir"\"" ~ j ]
]

$params_devel = [
  [ -DFABLWOPDIR="\""$fablwopdir_devel"\"" ~ j ]
  [ -DFABINVOKEDIR="\""$fabinvokedir_devel"\"" ~ j ]
  [ -DFABTMPDIR="\""$fabtmpdir_devel"\"" ~ j ]
  [ -DFABIPCDIR="\""$fabipcdir_devel"\"" ~ j ]
]

$cflags_xapi_final = [ $cflags_xapi_final $copts $params ]
$cflags_xapi_debug = [ $cflags_xapi_debug $copts $params ]
$cflags_xapi_devel = [ $cflags_xapi_devel $copts $params_devel ]

$rpath = [ 
  [ $dlibxapi $dlibxlinux $dliblistwise $dlibvalyria $dliblogger $dlibxunit $dlibnarrator $dlibfabcore $dliblorien ~ [ ?{ [ rb{$*} ~ j ] "s{^}{'-Wl,-rpath,$ORIGIN/}" "s{$}{'}" ~ fi ] ]
]

# -lrt required for glibc < 2.17 as per man clock_gettime
$lopts             = [ -lrt ]
$lflags_xapi_final = [ $lflags_xapi_final $lopts $libxapi_xapi_final $libxlinux_xapi_final $liblistwise_xapi_final $libvalyria_xapi_final $liblogger_xapi_final $libnarrator_xapi_final $liblorien_xapi_final $libfabcore_xapi_final ]
$lflags_xapi_debug = [ $lflags_xapi_debug $lopts $libxapi_xapi_debug $libxlinux_xapi_debug $liblistwise_xapi_debug $libvalyria_xapi_debug $liblogger_xapi_debug $libnarrator_xapi_debug $liblorien_xapi_debug $libfabcore_xapi_debug ]
$lflags_xapi_devel = [ $lflags_xapi_devel $lopts $libxapi_xapi_devel $libxlinux_xapi_devel $liblistwise_xapi_devel $libvalyria_xapi_devel $liblogger_xapi_devel $libnarrator_xapi_devel $liblorien_xapi_devel $libfabcore_xapi_devel $rpath ]

# standard files - standard nopic compilation
+[@std.c]($dext = [ xapi.final.o ]; $rdirs = $*; $cc; $cflags = $cflags_xapi_final)
+[@std.c]($dext = [ xapi.debug.o ]; $rdirs = $*; $cc; $cflags = $cflags_xapi_debug)
+[@std.c]($dext = [ xapi.devel.o ]; $rdirs = $*; $cc; $cflags = $cflags_xapi_devel)

#
# catchall node
#
[ @all ] : [ @final @debug @devel ]
[ @final ] : [ $fab_final ]
[ @debug ] : [ $fab_debug ]
[ @devel ] : [ $fab_devel ]

#
# executables
#  -export-dynamic enables dloaded code (in particular, the fab-specific operator so's) to bind to symbols in the executable.
#
[ $fab_final ] :^ [ $libxapi_xapi_final $libxlinux_xapi_final $liblistwise_xapi_final $liblogger_xapi_final $libnarrator_xapi_final $libfabcore_xapi_final ]
[ $fab_debug ] :^ [ $libxapi_xapi_debug $libxlinux_xapi_debug $liblistwise_xapi_debug $liblogger_xapi_debug $libnarrator_xapi_debug $libfabcore_xapi_debug ]
[ $fab_devel ] :^ [ $libxapi_xapi_devel $libxlinux_xapi_devel $liblistwise_xapi_devel $liblogger_xapi_devel $libnarrator_xapi_devel $libfabcore_xapi_devel ]

[ $fab_final ] : [ $*/main.xapi.final.o ~ j ] 
{
  [ $cc ] [ $cflags_xapi_final -export-dynamic ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw rx lx/o uu fi ] [ $lflags_xapi_final ~ fi ]
}

[ $fab_debug ] : [ $*/main.xapi.debug.o ~ j ] 
{
  [ $cc ] [ $cflags_xapi_debug -export-dynamic ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw rx lx/o uu fi ] [ $lflags_xapi_debug ~ fi ]
}

[ $fab_devel ] : [ $*/main.xapi.devel.o ~ j ] 
{
  [ $cc ] [ $cflags_xapi_devel -export-dynamic ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw rx lx/o uu fi ] [ $lflags_xapi_devel ~ fi ]
}

#
# tasks
#

[ @install.base.final ] : [ @final ]
{
  install -d                                      [ $destdir/$bindir ]
  rm                                              [ $destdir/$bindir/fab ] 2>/dev/null
  install [ $fab_final ]                          [ $destdir/$bindir/fab ]
}

[ @install.dist.final ] : [ @install.base.final ]
[ @install.local.final ] : [ @install.base.final ]
{
  chown fabsys:fabsys                             [ $destdir/$bindir/fab ]
  chmod ug+s                                      [ $destdir/$bindir/fab ]
}

[ @install.base.debug ] : [ @debug ]
{
  install -d                                      [ $destdir/$bindir ]
  rm                                              [ $destdir/$bindir/fab ] 2>/dev/null
  install [ $fab_debug ]                          [ $destdir/$bindir/fab ]
}

[ @install.dist.debug ] : [ @install.base.debug ]
[ @install.local.debug ] : [ @install.base.debug ]
