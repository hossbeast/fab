/* Copyright (c) 2012-2019 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.

   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

use builtin-modules/cc           # this module contains C sources
use builtin-modules/flex
use builtin-modules/bison
use builtin-modules/executable  # this module builds an executable
use xapi/errtab
#use xunit-tests

# declare variants
variant xapi.{,pic.}{debug,devel,final}

variant xapi.{debug,devel,final} : [
  rule fabd.? -> //module/targets
]

# make common objects available for #include and linking
import fab/include
import fab/asan
import lib{common,descriptor,xapi,xlinux,valyria,value,logger,narrator,fab,lorien,moria,yyutil,xunit}

variant xapi.{debug,devel} : [
  rule fabd.? <- asan/asan.$?.o
]

# invoke the compiler to build the executable
rule **~test/*.?.o -> fabd.$? : executable/bam-cc

# intra module dependencies - generated files
rule */*.?.o <- errtab/CONFIG.errtab.h
rule */*.?.o <- errtab/FABD.errtab.h
rule */*.?.o <- errtab/FORMULA.errtab.h
rule */*.?.o <- errtab/MODULE.errtab.h
rule */*.?.o <- errtab/PATTERN.errtab.h
rule */*.?.o <- errtab/REQUEST.errtab.h
rule */*.?.o <- errtab/SELECTOR.errtab.h

# library dependencies
variant xapi.pic.{debug,devel,final} : [
  rule //module/imports/*~libxunit/lib*.?.so -> fabd.${?-pic}
]

variant xapi.pic.devel : [
  rule //module/imports/libxunit/lib*.?.so -> fabd.${?-pic}
]

var : {
  cflags : [ -lrt -lpthread ]
}

#
# tests
#

variant xapi.pic.devel : [
  # all the code
  rule **~test/(*~main).?.o -> test/blob.?.so : fabd/bam-cc-blob-so

  # some test dependency code
  rule test/node_operations_test.?.o -> test/blob.?.so

  #
  # here be hacks
  #  these are arranged like this in order to be loaded in the proper order
  #
  rule //module/imports/libyyutil/libyyutil.?.so -> //two
  rule //module/imports/libmoria/libmoria.?.so -> //three
  rule //module/imports/libvalue/libvalue.?.so -> //three
  rule //module/imports/liblorien/liblorien.?.so -> //three
  rule //module/imports/libfab/libfab.?.so -> //four
  rule test/blob.?.so -> //five
  rule //two -> //three
  rule //three -> //four
  rule //four -> //five
  rule //five -> //xunit
]

#require xunit-runner
#
## build test sos
#variant xapi.pic.devel : [
#  rule **/test/(test_*.?).o -> $^D/$1.so : xunit-tests/bam-cc-test-so
#  rule config_parser/test/test_*.?.so -> //xunit
#]
#
rule //tests -> //module/targets

use xunit-tests
