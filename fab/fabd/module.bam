/* Copyright (c) 2012-2019 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.

   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

use cc           # this module contains C sources
use flex
use bison
use executable  # this module builds an executable
use void/errtab
use xunit-tests
use git

# declare variants
variant void.{debug,devel,final,trace}
variant void.pic.devel

variant void.{debug,devel,final,trace} : [
  rule fabd.? -> //module/targets
]

# make common objects available for #include and linking
import fab/include
import fab/asan
import lib{common,descriptor,void,xlinux,valyria,value,logger,narrator,fab,lorien,moria,yyutil,xunit}

rule */*.?.o <- //modules/libfab/fs/fab/stats.h

variant void.devel : [
  rule fabd.? <- asan/asan.$?.o
]

# invoke the compiler to build the executable
variant void.{debug,devel,final,trace} : [
  rule **~test/*.?.o -> fabd.$? : executable/cc.bam
]

# intra module dependencies - generated files
rule */*.?.o <- errtab/CONFIG.errtab.h
rule */*.?.o <- errtab/FABD.errtab.h
rule */*.?.o <- errtab/FORMULA.errtab.h
rule */*.?.o <- errtab/MODULE.errtab.h
rule */*.?.o <- errtab/PATTERN.errtab.h
rule */*.?.o <- errtab/REQUEST.errtab.h
rule */*.?.o <- errtab/SELECTOR.errtab.h

# library dependencies
variant void.pic.{debug,devel,final,trace} : [
  rule //module/imports/*~libxunit/lib*.?.so -> fabd.${?-pic}
]

var : {
  cflags : [ -lrt -lpthread ]
}

#
# tests
#

variant void.pic.devel : [
  rule //module/imports/libxunit/lib*.?.so -> fabd.${?-pic}

  # all the code into the blob
  rule **~test/(*~main).?.o -> test/blob.?.so : ./cc-blob-so.bam

  # test utilities
  rule test/node_operations_test.?.o -> test/blob.?.so

  rule **/test/test_*.?.so <- test/blob.?.so

  rule //module/imports/lib*/lib*.?.so -> test/blob.?.so
]
