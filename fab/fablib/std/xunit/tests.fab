/* Copyright (c) 2012-2013 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# @std.xunit.tests.fab
#  provides discovery formula for .c files
#  provides fabrication formula for .c -> .o
#  provides dependencies for .o -> .c
#
# var/closure
#  cc
#  cflags
#
#  dirs       - directories containing .c files
#  rdirs      - directories containing .c files, recursive search
#  paths      - paths to .c files
#
#  dscdirs   - (as above, but for discovery only)
#  rdscdirs  - 
#  dscpaths  - 
#
#  fabdirs   - (as above, but for fabrication/dependency only)
#  rfabdirs  - 
#  fabpaths  - 
#
#  dext       - file extension for object files resulting from fabrication
#  gendir    - parameter to gcc-dep, directory path for the location of generated files

# default source file extension
$sext = [ c ]

# default object file extension
$dext = [ pic.o ]

# default object file extension for discovered dependencies
$dscext = [ pic.o ]

# default test lib extension
$soext = [ xu.so ]

# default filter for test files
$filter = [ ?, l,/test.c ]

# cc : errors.c -> errors.o @ std.c
+[@std.c]($filter; -$cobjpaths)

# compile test sos
$tsopaths = [ $cobjpaths ~ [ sxf/$dext/$soext ~ j ] ]

[ $tsopaths ~ dj shift ] :: [ $< ~ [ rx [ sxf/$soext/$dext ~ j ] ~ fi ] ]
{
  [ $cc ] [ $cflags -shared ~ uu fi ] -o [ $@ ] [ $@ ~ [ rx/aneedw [ lx/$dext ~ j ] fi ~ fi ] ]
}

# individual test tasks
/*
[ $cobjpaths ~ ?{ s{^}{/../tests/} dj shift ] :: [ $< ~ ?{ s{^/../tests/}{ } ]
{
	[ $xunit ~ can ] [ $@ ~ can ]
}
*/
