/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.

   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# @std.y
#  provides discovery formula for .y files
#  provides fabrication formula for .tab.c -> .tab.<dext>
#  provides dependencies for tab.<dext> -> .y

# var/closure
#  cc
#  cflags 
#  bison
#  bisonflags
#
#  dirs       - directories containing .y files
#  rdirs      - directories containing .y files, recursive search
#  paths      - paths to .y files
#
#  dscdirs    - (as above, but for discovery only)
#  dscrdirs   - 
#  dscpaths   - 
#
#  fabdirs    - (as above, but for fabrication/dependency only)
#  fabrdirs   - 
#  fabpaths   - 
#

# default object file extension
$dext = [ o ]

# paths to y files for discovery
$ydscpaths = [
	$paths				# paths
	$dscpaths			# paths, discovery only

	[
		$dirs				# directories
		$dscdirs		# directories, discovery only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rdscdirs		# recursive directories, discovery only
	~ lsr ]
~ lx/y ]

# paths to y files for fabrication
$yfabpaths = [
	$paths				# paths
	$fabpaths			# paths, fabrication only

	[
		$dirs				# directories
		$fabdirs		# directories, fabrication only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rfabdirs		# recursive directories, fabrication only
	~ lsr ]
~ lx/y ]

# discovery
[ $ydscpaths ] %
{
	    [ $bison ] [ $bisonflags ~ uu fi ] -o /dev/stdout [ $@ ] [
	] | [ $cc ] [ $cflags ~ uu fi ] -MM -MP -MG -xc - [
	] | [ $^gccdep ] '[ $gendir ]' [ $@ ~ [ rx [ sx/y/tab.$dext ~ j ] y fi ~ fi ] ] [ $dext ]
}

# $bison : y -> { tab.c, tab.h }
[ $yfabpaths ~ sx/y/tab.c sy uu v d cp u sx/tab.c/tab.h z dj/2 shift pop ] :: [ $< ~ rx sx/tab.c/y sx/tab.h/y ss u ]
{
	[ $bison ] [ $bisonflags ~ uu fi ] -o [ $@ ~ w/1/1 ] -d	[ $@ ~ rx/ineed lx/y uu ]
}

# $cc : tab.c -> tab.o via std.c
+[@std.c](-$cobjpaths; $cfabpaths = [ $yfabpaths ~ sx/y/tab.c ]; $cc $cflags; $cdscpaths)
$yobjpaths = [ $cobjpaths ]
