/* Copyright (c) 2012-2013 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# @std.c.fab
#  provides discovery formula for .c files
#  provides fabrication formula for .c -> .o
#  provides dependencies for .o -> .c
#
# var/closure
#  cc
#  cflags
#
#  dirs       - directories containing .c files
#  rdirs      - directories containing .c files, recursive search
#  paths      - paths to .c files
#
#  dscdirs   - (as above, but for discovery only)
#  rdscdirs  - 
#  dscpaths  - 
#
#  fabdirs   - (as above, but for fabrication/dependency only)
#  rfabdirs  - 
#  fabpaths  - 
#
#  dext       - file extension for object files resulting from fabrication
#  gendir    - parameter to gcc-dep, directory path for the location of generated files

# default source file extension
$sext = [ c ]

# default object file extension
$dext = [ o ]

# default object file extension for discovered dependencies
$dscext = [ $dext ]

# paths to source files for discovery
$cdscpaths = [
	[
		$paths				# paths
		$dscpaths			# paths, discovery only

		[
			$dirs				# directories
			$dscdirs		# directories, discovery only
		~ [ ls [ lxf/$sext ~ j ] ~ fi ] ]

		[
			$rdirs			# recursive directories
			$rdscdirs		# recursive directories, discovery only
		~ [ lsr [ lxf/$sext ~ j ] ~ fi ] ]
 ~ [ $dscfilter ] ]
~ [ $filter ] ]

# paths to source files for fabrication
$cfabpaths = [
	[
		$paths				# paths
		$fabpaths			# paths, fabrication only

		[
			$dirs				# directories
			$fabdirs		# directories, fabrication only
		~ [ ls [ lxf/$sext ~ j ] ~ fi ] ]

		[
			$rdirs			# recursive directories
			$rfabdirs		# recursive directories, fabrication only
		~ [ lsr [ lxf/$sext ~ j ] ~ fi ] ]
	~ [ $fabfilter ] ]
 ~ [ $filter ] ]

# paths to object files
$cobjpaths = [ $cfabpaths ~ [ sx/$sext/$dext ] ]

# discovery
#
# -MM : ignore system headers
# -MG : include generated files
# -MP : produce phony list - which is what gcc-dep actually parses
#
[ $cdscpaths ] %
{
	[ $cc ] [ $cflags ~ uu fi ] -MM -MP -MG [ $@ ] | [ $^gccdep ] '[ $gendir ]' [ $@ ~ [ rx [ sx/$sext/$dext ~ j ] ~ fi ] ] [ $dscext ]
}

# fabrication and dependency
[ $cobjpaths ~ dj shift ] :: [ $< ~ [ sx/$dext/$sext ] ]
{
	[ $cc ] [ $cflags ~ uu fi ] -c [ $@ ~ [ rx/ineed [ lx/$sext ~ j ] uu fi ~ fi ] ] -o [ $@ ]
}
