/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# definitions
+[ $*/../../vars.fab ]

# source invocations
+[ $dcommon ]() @common
+[ $dfabcore/common/common.fab ~ j ]() @fabcommon

# variables
$sdirs = [ $dfabw  ~ lsr c -d ]
$cflags = [
	[ -DFABVERSIONS="\""$VERSIONS"\"" ~ j ]
	[ -DFABVERSIONN="\""$VERSIONN"\"" ~ j ]

	# include paths
	[ $sdirs [ $dfabcore/common ~ j lsr c -d ] $dlibxapi $dlibxlinux $dlibpstring ~ s/^/-I ]
]

$params = [
	[ -DFABLWOPDIR="\""$fablwopdir"\"" ~ j ]
	[ -DFABINVOKEDIR="\""$fabinvokedir"\"" ~ j ]
	[ -DFABTMPDIR="\""$fabtmpdir"\"" ~ j ]
	[ -DFABIPCDIR="\""$fabipcdir"\"" ~ j ]
]

$params_devel = [
	[ -DFABLWOPDIR="\""$fablwopdir_devel"\"" ~ j ]
	[ -DFABINVOKEDIR="\""$fabinvokedir_devel"\"" ~ j ]
	[ -DFABTMPDIR="\""$fabtmpdir_devel"\"" ~ j ]
	[ -DFABIPCDIR="\""$fabipcdir_devel"\"" ~ j ]
]

$cflags_xapi_final = [ $cflags_xapi_final $cflags $params ]
$cflags_xapi_debug = [ $cflags_xapi_debug $cflags $params ]
$cflags_xapi_devel = [ $cflags_xapi_devel $cflags $params_devel ]

$rpath = [ 
	[ $dlibxapi $dlibxlinux $dlibxunit $dlibpstring $dliblistwise ~ [ ?{ [ rb{$*} ~ j ] "s{^}{'-Wl,-rpath,$ORIGIN/}" "s{$}{'}" ~ fi ] ]
]
$lflags_xapi_final = [ $lflags_xapi_final $libxapi_xapi_final $libxlinux_xapi_final $libpstring_xapi_final $liblistwise_xapi_final ]
$lflags_xapi_debug = [ $lflags_xapi_debug $libxapi_xapi_debug $libxlinux_xapi_debug $libpstring_xapi_debug $liblistwise_xapi_debug ]
$lflags_xapi_devel = [ $lflags_xapi_devel $libxapi_xapi_devel $libxlinux_xapi_devel $libpstring_xapi_devel $liblistwise_xapi_devel $rpath ]

# standard files - standard compilation
+[@std.c]($dext = [ xapi.final.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_xapi_final)
+[@std.c]($dext = [ xapi.debug.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_xapi_debug)
+[@std.c]($dext = [ xapi.devel.o ]; $dirs = $sdirs; $cc; $cflags = $cflags_xapi_devel; $gccdep = $gccdep_devel)

#
# catchall node
#
[ @all ] : [ @final @debug @devel ]
[ @final ] : [ $fabw_final ]
[ @debug ] : [ $fabw_debug ]
[ @devel ] : [ $fabw_devel ]

#
# executables
#
[ $fabw_final ] :^ [ $libxapi_xapi_final $libxlinux_xapi_final $libpstring_xapi_final $liblistwise_xapi_final ]
[ $fabw_debug ] :^ [ $libxapi_xapi_debug $libxlinux_xapi_debug $libpstring_xapi_debug $liblistwise_xapi_debug ]
[ $fabw_devel ] :^ [ $libxapi_xapi_devel $libxlinux_xapi_devel $libpstring_xapi_devel $liblistwise_xapi_devel ]

[ $fabw_final ] : [ $dfabw/main.xapi.final.o ~ j ] 
{
	[ $cc ] [ $cflags_xapi_final ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw rx lx/o uu fi ] [ $lflags_xapi_final ~ fi ]
}

[ $fabw_debug ] : [ $dfabw/main.xapi.debug.o ~ j ] 
{
	[ $cc ] [ $cflags_xapi_debug ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw rx lx/o uu fi ] [ $lflags_xapi_debug ~ fi ]
}

[ $fabw_devel ] : [ $dfabw/main.xapi.devel.o ~ j ] 
{
	[ $cc ] [ $cflags_xapi_devel ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw rx lx/o uu fi ] [ $lflags_xapi_devel ~ fi ]
}

#
# tasks
#

[ @install.base.final ] : [ @final ]
{
	install -d																			[ $destdir/$bindir ]
	rm																							[ $destdir/$bindir/fabw ] 2>/dev/null
	install [ $fabw_final ]													[ $destdir/$bindir/fabw ]
}

[ @install.dist.final ] : [ @install.base.final ]
[ @install.local.final ] : [ @install.base.final ]
{
	chown fabsys:fabsys															[ $destdir/$bindir/fabw ]
	chmod ug+s																			[ $destdir/$bindir/fabw ]
}

[ @install.base.debug ] : [ @debug ]
{
	install -d																			[ $destdir/$bindir ]
	rm																							[ $destdir/$bindir/fabw ] 2>/dev/null
	install [ $fabw_debug ]													[ $destdir/$bindir/fabw ]
}

[ @install.dist.debug ] : [ @install.base.debug ]
[ @install.local.debug ] : [ @install.base.debug ]
