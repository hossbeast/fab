#!/usr/bin/env perl

use strict;
use warnings;
$SIG{__WARN__} = sub { die @_ };

use POSIX;
use File::Basename;
use Cwd;
our $repodir;
BEGIN { $repodir = dirname(Cwd::realpath("$0/..")) }
use lib "$repodir/integ/lib";
use util;
use tree;
use bam;

my $testdir = setup(<<'TREE');
|-- A
|   `-- foo
`-- module.bam
TREE

# before
assert_stats(undef, { modules => 1 });
assert_stats(".", {
    reloaded => 1
  , modules_up => 0
  , modules_down => 0
});
assert_stats("module.bam", {
    parsed_try => 1
  , parsed => 1
});

# create the child module file
open my $fh, ">>", "$testdir/A/module.bam" or die $!;
print $fh "\n";
close $fh;

# after
reconcile();
assert_stats(undef, { modules => 2 });
assert_stats("A", {
    reloaded => 1
  , modules_up => 1
  , modules_down => 0
});
assert_stats("A/module.bam", {
    parsed_try => 1
  , parsed => 1
});
assert_stats(".", {
    reloaded => 2
  , modules_up => 0
  , modules_down => 1
});
assert_stats("module.bam", {
    parsed_try => 2
  , parsed => 2
});
