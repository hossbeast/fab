#!/usr/bin/env perl

use strict;
use warnings;
$SIG{__WARN__} = sub { die @_ };

use POSIX;
use File::Basename;
use Cwd;
our $repodir;
BEGIN { $repodir = dirname(Cwd::realpath("$0/..")) }
use lib "$repodir/integ/lib";
use util;
use tree;
use bam;

# build out the fstree under /tmp
my $testdir = setup(<<TREE);
|-- module.bam+devel
TREE

# before
assert_stats(undef, {
    modules => 1
  , system_state_ok => 1
});
assert_stats(".", {
    reloaded => 1
  , state => "fresh"
});
assert_stats("module.bam+devel", {
    parsed_try => 1
  , parsed => 1
  , state => "fresh"
});

open my $fh, ">>", "$testdir/var.bam+devel" or die $!;
print $fh <<'TEXT';
lflags.devel : [
  -lasan -lubsan
]
TEXT
close $fh;

# after - appearance of var file in same dir has invalidated the module
reconcile();
assert_stats(undef, {
    modules => 1
  , system_state_ok => 2
});
assert_stats(".", {
    reloaded => 2
  , state => "fresh"
});
assert_stats("module.bam+devel", {
    parsed_try => 2
  , parsed => 2
  , state => "fresh"
});
assert_stats("var.bam+devel", {
    parsed_try => 1
  , parsed => 1
  , state => "fresh"
});
