/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.

   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# definitions
+[ $*/../vars.fab ]

# source invocations
+[ $dcommon ]() @common

# variables
$basename           = [ xapi ]
$libname_xapi       = [ lib $basename -xapi .so ~ j ]

$cflags             = [ -fPIC [ $dlibxapi ~ lsr c -d s/^/-I ] ]
$cflags_xapi_final  = [ $cflags_xapi_final $cflags ]
$cflags_xapi_debug  = [ $cflags_xapi_debug $cflags ]
$cflags_xapi_devel  = [ $cflags_xapi_devel $cflags -DXAPI_RUNTIME_CHECKS ]

$lflags             = [ -shared [ "-Wl,--version-script=" $*/exports  ~ j ] ]
$lflags_xapi_final  = [ $lflags_xapi_final $lflags [ "-Wl,-soname," libxapi-xapi.so ~ j ] ]
$lflags_xapi_debug  = [ $lflags_xapi_debug $lflags [ "-Wl,-soname," libxapi-xapi.so ~ j ] ]
$lflags_xapi_devel  = [ $lflags_xapi_devel $lflags [ "-Wl,-soname," libxapi-xapi-devel.so ~ j ] ]

# source files
+[@std.c]($dext = [ xapi.final.pic.o ]; $rdirs = [ $dlibxapi ~ ls l/integ d ]; $cc; $cflags = $cflags_xapi_final)
+[@std.c]($dext = [ xapi.debug.pic.o ]; $rdirs = [ $dlibxapi ~ ls l/integ d ]; $cc; $cflags = $cflags_xapi_debug)
+[@std.c]($dext = [ xapi.devel.pic.o ]; $rdirs = [ $dlibxapi ~ ls l/integ d ]; $cc; $cflags = $cflags_xapi_devel)
+[@std.xapi.errtab]($dext = [ xapi.final.pic.o ]; $dirs = [ $*/errtab ~ j ]; $apidata = [1]; $cc; $cflags = $cflags_xapi_final)
+[@std.xapi.errtab]($dext = [ xapi.debug.pic.o ]; $dirs = [ $*/errtab ~ j ]; $apidata = [1]; $cc; $cflags = $cflags_xapi_debug)
+[@std.xapi.errtab]($dext = [ xapi.devel.pic.o ]; $dirs = [ $*/errtab ~ j ]; $apidata = [1]; $cc; $cflags = $cflags_xapi_devel)

##
## dependencies
##

[ @all ] : [ @release @test.fast ]
[ @release ] : [ @release.xapi ]
[ @release.xapi ] : [ @final.xapi @debug.xapi @devel.xapi ]
[ @final.xapi ] : [ $libxapi_xapi_final ]
[ @debug.xapi ] : [ $libxapi_xapi_debug ]
[ @devel.xapi ] : [ $libxapi_xapi_devel ]

##
## formulas
##

# library exports
[ $*/exports ~ j ] : [ $* ~ lsr lx/c ]
{
    (echo "{ global: "
  > perl -ne 'if(/API(?:DATA)?.*? ([a-zA-Z_][a-zA-Z0-9_]+) *(?:\(|=|;)/) { print "$1;\n" }' <(\
    cat -- [ $@ ~ rx/ineedw fi ] )
    echo "callstack;"
  > echo "local: *; };"
  ) 1>[ $@ ]
}

# link the library
[ $libxapi_xapi_final ] : [ [ $*/exports ~ j ] [ $* ~ ls l/integ d lsr sx/c/xapi.final.pic.o y ] [ $*/errtab/SYS.errtab.xapi.final.pic.o ~ j ] ]
{
  [ [ $cc ] [ $cflags_xapi_final ~ uu ] -o [ $@ ] [ $@ ~ rx/aneedw lx/o ss u ] $lflags_xapi_final ~ fi ]
}

[ $libxapi_xapi_debug ] : [ [ $*/exports ~ j ] [ $* ~ ls l/integ d lsr sx/c/xapi.debug.pic.o y ] [ $*/errtab/SYS.errtab.xapi.debug.pic.o ~ j ] ]
{
  [ [ $cc ] [ $cflags_xapi_debug ~ uu ] -o [ $@ ] [ $@ ~ rx/aneedw lx/o ss u ] $lflags_xapi_debug ~ fi ]
}

[ $libxapi_xapi_devel ] : [ [ $*/exports ~ j ] [ $* ~ ls l/integ d lsr sx/c/xapi.devel.pic.o y ] [ $*/errtab/SYS.errtab.xapi.devel.pic.o ~ j ] ]
{
  [ [ $cc ] [ $cflags_xapi_devel ~ uu ] -o [ $@ ] [ $@ ~ rx/aneedw lx/o ss u ] $lflags_xapi_devel ~ fi ]
}

##
## tasks
##

[ @install.final.xapi ] : [ @final.xapi ]
{
  install -d                                [ $destdir/$libdir ]
  install [ $libxapi_xapi_final ]           [ $destdir/$libdir/$libname_xapi ]
}

[ @install.debug.xapi ] : [ @debug.xapi ]
{
  install -d                                [ $destdir/$libdir ]
  install [ $libxapi_xapi_debug ]           [ $destdir/$libdir/$libname_xapi ]
}

[ @installdevheaders ]
{
  install -d                                [ $destdir/$incdir ]
  install [ $dlibxapi/xapi.h ]              [ $destdir/$incdir ]

  install -d                                [ $destdir/$incdir/xapi ]
  install [ $dlibxapi/xapi/frame.h ]        [ $destdir/$incdir/xapi ]
  install [ $dlibxapi/xapi/unwind.h ]       [ $destdir/$incdir/xapi ]
  install [ $dlibxapi/xapi/errcode.h ]      [ $destdir/$incdir/xapi ]
  install [ $dlibxapi/xapi/XAPI.errtab.h ]  [ $destdir/$incdir/xapi ]
  install [ $dlibxapi/xapi/SYS.errtab.h ]   [ $destdir/$incdir/xapi ]
}

#
# tests
#  for rationale see test/README.md
#

+[@std.c]($dext = [ xapi.debug.o ]; $rdirs = [ $*/integ ~ j ]; $cc; $cflags = $cflags_xapi_debug)
+[@std.c]($dext = [ xapi.devel.o ]; $rdirs = [ $*/integ ~ j ]; $cc; $cflags = $cflags_xapi_devel)
+[@std.c]($dext = [ eapi.devel.o ]; $rdirs = [ $*/integ ~ j ]; $cc; $cflags = [ $cflags_eapi_devel [ $dlibxapi ~ lsr c -d s/^/-I ] ])
+[@std.xapi.errtab]($dext = [ xapi.debug.o ]; $rdirs = [ $*/integ ~ j ]; $apidata = [1]; $cc; $cflags = $cflags_xapi_debug)
+[@std.xapi.errtab]($dext = [ xapi.devel.o ]; $rdirs = [ $*/integ ~ j ]; $apidata = [1]; $cc; $cflags = $cflags_xapi_devel)
+[@std.xapi.errtab]($dext = [ eapi.devel.o ]; $rdirs = [ $*/integ ~ j ]; $apidata = [1]; $cc; $cflags = [ $cflags_eapi_devel [ $dlibxapi ~ lsr c -d s/^/-I ] ])

[ $*/integ ~ j lsr l/errtab v sx/c/stacktrace_checks sy dj shift ] ::^ [ $libxapi_xapi_devel [ $*/integ/errtab/TEST.errtab.xapi.devel.o ~ j ] ]
[ $*/integ ~ j lsr l/errtab v sx/c/stacktrace_checks sy dj shift ] :: [ $< ~ sx/stacktrace_checks/xapi.devel.o ]
{
  [ [ $cc ] -o [ $@ ] [ $cflags_xapi_devel ~ uu ] [ $@ ~ rx/aneedw lx/o ss u ] [ $libxapi_xapi_devel ] [ $dlibxapi ~ [ ?{ [ rb{$*/integ} ~ j ] "s{^}{'-Wl,-rpath,$ORIGIN/}" "s{$}{'}" ~ fi ] ] ~ fi ]
}

[ $*/integ ~ j lsr l/errtab v sx/c/stacktrace sy dj shift ] ::^ [ $libxapi_xapi_debug [ $*/integ/errtab/TEST.errtab.xapi.debug.o ~ j ] ]
[ $*/integ ~ j lsr l/errtab v sx/c/stacktrace sy dj shift ] :: [ $< ~ sx/stacktrace/xapi.debug.o ]
{
  [ [ $cc ] -o [ $@ ] [ $cflags_xapi_debug ~ uu ] [ $@ ~ rx/aneedw lx/o ss u ] [ $libxapi_xapi_debug ] [ $dlibxapi ~ [ ?{ [ rb{$*/integ} ~ j ] "s{^}{'-Wl,-rpath,$ORIGIN/}" "s{$}{'}" ~ fi ] ] ~ fi ]
}

[ $*/integ ~ j lsr l/errtab v sx/c/errorcode sy dj shift ] :: [ $< ~ sx/errorcode/eapi.devel.o ]
{
  [ [ $cc ] -o [ $@ ] [ $cflags_eapi_devel ~ uu ] [ $@ ~ rx/aneedw lx/o ss u ] ~ fi ]
}

[ @test ] : [ @test.stacktrace_checks @test.stacktrace @test.errorcode ]
[ @test.fast ] : [ @test.stacktrace_checks.fast @test.stacktrace.fast @test.errorcode.fast ]

[ @test.stacktrace ] : [ $*/integ ~ j lsr l/errtab v sx/c/stacktrace sy ]
{
  set -e
  (
    for x in [ $@ ~ rx/ineed fi ]; do [ $dcommon/valgrind.runner ~ j ] $x ; done
  ) | tee /dev/fd/501
}

[ @test.stacktrace.fast ] : [ $*/integ ~ j lsr l/errtab v sx/c/stacktrace sy ]
{
  set -e
  (
    [ $@ ~ rx/ineed fi/; ]
  ) | tee /dev/fd/501
}

[ @test.stacktrace_checks ] : [ $*/integ ~ j lsr l/errtab v sx/c/stacktrace_checks sy ]
{
  set -e
  (
    for x in [ $@ ~ rx/ineed fi ]; do [ $dcommon/valgrind.runner ~ j ] $x ; done
  ) | tee /dev/fd/501
}

[ @test.stacktrace_checks.fast ] : [ $*/integ ~ j lsr l/errtab v sx/c/stacktrace_checks sy ]
{
  set -e
  (
    [ $@ ~ rx/ineed fi/; ]
  ) | tee /dev/fd/501
}

[ @test.errorcode ] : [ $*/integ ~ j lsr l/errtab v sx/c/errorcode sy ]
{
  set -e
  (
    for x in [ $@ ~ rx/ineed fi ]; do [ $dcommon/valgrind.runner ~ j ] $x ; done
  ) | tee /dev/fd/501
}

[ @test.errorcode.fast ] : [ $*/integ ~ j lsr l/errtab v sx/c/errorcode sy ]
{
  set -e
  (
    [ $@ ~ rx/ineed fi/; ]
  ) | tee /dev/fd/501
}
