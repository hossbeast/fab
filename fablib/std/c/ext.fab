# @std.c.ext
#  provides discovery formula for .c files
#  provides fabrication formula for .c -> .o
#  provides dependencies for .o -> .c
#
# var/closure
#  cc
#  cflags
#
#  dirs       - directories containing .c files
#  rdirs      - directories containing .c files, recursive search
#  paths      - paths to .c files
#
#  dscdirs   - (as above, but for discovery only)
#  dscrdirs  - 
#  dscpaths  - 
#
#  fabdirs    - (as above, but for fabrication/dependency only)
#  fabrdirs   - 
#  fabpaths   - 
#

# paths to c files for discovery
$cdscpaths = [
	$paths				# paths
	$dscpaths			# paths, discovery only

	[
		$dirs				# directories
		$dscdirs		# directories, discovery only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rdscdirs		# recursive directories, discovery only
	~ lsr ]
~ xm/<c> ]

# paths to c files for fabrication
$cfabpaths = [
	$paths				# paths
	$fabpaths			# paths, fabrication only

	[
		$dirs				# directories
		$fabdirs		# directories, fabrication only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rfabdirs		# recursive directories, fabrication only
	~ lsr ]
~ xm/<c> ]

# discovery
[ $cdscpaths ] %
{
	[ $cc ] [ $cflags ~ ss/u/fx ] -MM -MP -MG [ $@ ] | gcc-dep [ $@ ~ [ rx/xs/< $ext >/fx ~ j ] ] [ $ext ]
}

# fabrication and dependency
[ $cfabpaths ~ [ xs/< $ext >/y/dj/shift ~ j ] ] :: [ $< ~ [ rx/xs/< $ext >/<c> ~ j ] ]
{
	[ $cc ] [ $cflags ~ ss/u/fx ] -c [ $@ ~ rx/ineed/xm/<c>/ss/u/fx ] -o [ $@ ]
}
