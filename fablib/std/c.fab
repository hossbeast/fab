/* Copyright (c) 2012-2013 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# c.fab
#  provides discovery formula for .c files
#  provides fabrication formula for .c -> .o
#  provides dependencies for .o -> .c
#
# var/closure
#  cc
#  cflags
#
#  dirs       - directories containing .c files
#  rdirs      - directories containing .c files, recursive search
#  paths      - paths to .c files
#
#  dscdirs   - (as above, but for discovery only)
#  dscrdirs  - 
#  dscpaths  - 
#
#  fabdirs   - (as above, but for fabrication/dependency only)
#  fabrdirs  - 
#  fabpaths  - 
#
#  ext       - file extension for object files resulting from fabrication
#  gendir    - parameter to gcc-dep, directory path for the location of generated files

# default object file extension
$ext = [ o ]

# paths to c files for discovery
$cdscpaths = [
	$paths				# paths
	$dscpaths			# paths, discovery only

	[
		$dirs				# directories
		$dscdirs		# directories, discovery only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rdscdirs		# recursive directories, discovery only
	~ lsr ]
~ xm/<c> ]

# paths to c files for fabrication
$cfabpaths = [
	$paths				# paths
	$fabpaths			# paths, fabrication only

	[
		$dirs				# directories
		$fabdirs		# directories, fabrication only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rfabdirs		# recursive directories, fabrication only
	~ lsr ]
~ xm/<c> ]

# paths to object files
$cobjpaths = [ $cfabpaths ~ [ xs/<c>/< $ext >/y ~ j ] ]

# discovery
#
# -MM : ignore system headers
# -MG : include generated files
# -MP : produce phony list - which is what gcc-dep actually parses
#
[ $cdscpaths ] %
{
	[ $cc ] [ $cflags ~ uu/fx ] -MM -MP -MG [ $@ ] | gcc-dep '[ $gendir ]' [ $@ ~ [ rx/xs/<c>/< $ext >/fx ~ j ] ] [ $ext ]
}

# fabrication and dependency
[ $cobjpaths ~ dj/shift ] :: [ $< ~ [ rx/xs/< $ext >/<c> ~ j ] ]
{
	[ $cc ] [ $cflags ~ uu/fx ] -c [ $@ ~ rx/ineed/xm/<c>/uu/fx ] -o [ $@ ]
}
