/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

$VERSIONL				= [ 0 6 0 0 ]											# version list - major, minor, revision, build
$VERSIONS				= [ v [ $VERSIONL ~ j/. ] ~ j ]		# version string
$VERSIONN				= [ $VERSIONL ~ j s/^0//g ] 			# version number

#
# debug :
#  - disable compiler optimizations
#  - enable compiler debug symbol generation
#  - include additional logging categories and cmdline options related to logging
#   - the --backtrace* options
#   - the --logtrace* options
#   - the *TOKEN and *STATE logging catories
#   - SANITY logging categories and related options
#  - disable ug+s check (to facilitate execution under valgrind)
#
#$debug					= [ 0 ]

#
# devel : (debug + portable)
#  - enable compilation options to use files from the source directories, including :
#   - listwise operators
#   - fab-listwise operators
#   - fab-provided invocations
#   - all libraries, via rpath
#
#$devel					= [ 0 ]

# source directories
$droot					= [ $* ]
$dfabcore				= [ $*/fab ~ j ]
$dfab						= [ $*/fab/fab ~ j ]
$dfabd					= [ $*/fab/fabd ~ j ]
$dfabw					= [ $*/fab/fabw ~ j ]
$dutil					= [ $*/fab/util ~ j ] 
$dcommon				= [ $*/common ~ j ]
$dlibxapi				= [ $*/libxapi ~ j ]
$dlibxlinux			= [ $*/libxlinux ~ j ]
$dlibpstring		= [ $*/libpstring ~ j ]
$dlibnarrate		= [ $*/libnarrate ~ j ]
$dliblistwise		= [ $*/listwise/liblistwise ~ j ]
$dlistwise			= [ $*/listwise/listwise ~ j ]
$dlibxunit			= [ $*/xunit/libxunit ~ j ]
$dxunit					= [ $*/xunit/xunit ~ j ]

# build artifacts
$libxapi_eapi_final			= [ $dlibxapi/libxapi.final.so ~ j ]
$libxapi_eapi_debug			= [ $dlibxapi/libxapi.debug.so ~ j ]
$libxapi_eapi_devel			= [ $dlibxapi/libxapi-devel.so ~ j ]
$libxapi_xapi_final			= [ $dlibxapi/libxapi-xapi.final.so ~ j ]
$libxapi_xapi_debug			= [ $dlibxapi/libxapi-xapi.debug.so ~ j ]
$libxapi_xapi_devel			= [ $dlibxapi/libxapi-xapi-devel.so ~ j ]
$libxlinux_eapi_final		= [ $dlibxlinux/libxlinux.final.so ~ j ]
$libxlinux_eapi_debug		= [ $dlibxlinux/libxlinux.debug.so ~ j ]
$libxlinux_eapi_devel		= [ $dlibxlinux/libxlinux-devel.so ~ j ]
$libxlinux_xapi_final		= [ $dlibxlinux/libxlinux-xapi.final.so ~ j ]
$libxlinux_xapi_debug		= [ $dlibxlinux/libxlinux-xapi.debug.so ~ j ]
$libxlinux_xapi_devel		= [ $dlibxlinux/libxlinux-xapi-devel.so ~ j ]
$liblistwise_eapi_final	= [ $dliblistwise/liblistwise.final.so ~ j ]
$liblistwise_eapi_debug	= [ $dliblistwise/liblistwise.debug.so ~ j ]
$liblistwise_eapi_devel	= [ $dliblistwise/liblistwise-devel.so ~ j ]
$liblistwise_xapi_final	= [ $dliblistwise/liblistwise-xapi.final.so ~ j ]
$liblistwise_xapi_debug	= [ $dliblistwise/liblistwise-xapi.debug.so ~ j ]
$liblistwise_xapi_devel	= [ $dliblistwise/liblistwise-xapi-devel.so ~ j ]
$listwise_eapi_final		= [ $dlistwise/listwise.eapi.final ~ j ]
$listwise_eapi_debug		= [ $dlistwise/listwise.eapi.debug ~ j ]
$listwise_eapi_devel		= [ $dlistwise/listwise.eapi.devel ~ j ]
$listwise_xapi_final		= [ $dlistwise/listwise.xapi.final ~ j ]
$listwise_xapi_debug		= [ $dlistwise/listwise.xapi.debug ~ j ]
$listwise_xapi_devel		= [ $dlistwise/listwise.xapi.devel ~ j ]
$libpstring_eapi_final	= [ $dlibpstring/libpstring.final.so ~ j ]
$libpstring_eapi_debug	= [ $dlibpstring/libpstring.debug.so ~ j ]
$libpstring_eapi_devel	= [ $dlibpstring/libpstring-devel.so ~ j ]
$libpstring_xapi_final	= [ $dlibpstring/libpstring-xapi.final.so ~ j ]
$libpstring_xapi_debug	= [ $dlibpstring/libpstring-xapi.debug.so ~ j ]
$libpstring_xapi_devel	= [ $dlibpstring/libpstring-xapi-devel.so ~ j ]
$libnarrate_eapi_final	= [ $dlibnarrate/libnarrate.final.so ~ j ]
$libnarrate_eapi_debug	= [ $dlibnarrate/libnarrate.debug.so ~ j ]
$libnarrate_eapi_devel	= [ $dlibnarrate/libnarrate-devel.so ~ j ]
$libnarrate_xapi_final	= [ $dlibnarrate/libnarrate-xapi.final.so ~ j ]
$libnarrate_xapi_debug	= [ $dlibnarrate/libnarrate-xapi.debug.so ~ j ]
$libnarrate_xapi_devel	= [ $dlibnarrate/libnarrate-xapi-devel.so ~ j ]
$libxunit_xapi_final		= [ $dlibxunit/libxunit-xapi.final.so ~ j ]
$libxunit_xapi_debug		= [ $dlibxunit/libxunit-xapi.debug.so ~ j ]
$libxunit_xapi_devel		= [ $dlibxunit/libxunit-xapi-devel.so ~ j ]
$fab_final							= [ $dfab/fab.final ~ j ]
$fab_debug							= [ $dfab/fab.debug ~ j ]
$fab_devel							= [ $dfab/fab.devel ~ j ]
$fabd_final							= [ $dfabd/fabd.final ~ j ]
$fabd_debug							= [ $dfabd/fabd.debug ~ j ]
$fabd_devel							= [ $dfabd/fabd.devel ~ j ]
$fabw_final							= [ $dfabw/fabw.final ~ j ]
$fabw_debug							= [ $dfabw/fabw.debug ~ j ]
$fabw_devel							= [ $dfabw/fabw.devel ~ j ]
$xunit_xapi_final				= [ $dxunit/xunit.final ~ j ]
$xunit_xapi_debug				= [ $dxunit/xunit.debug ~ j ]
$xunit_xapi_devel				= [ $dxunit/xunit.devel ~ j ]
$xunit_valgrind_runner  = [ $*/xunit/valgrind.runner ~ j ]
$xunit_tests            = [ $*/test/xunit.fab ~ j ]
$gccdep_final						= [ $dutil/gcc-dep ~ j ]
$gccdep_debug						= [ $dutil/gcc-dep ~ j ]
$gccdep_devel						= [ $dutil/gcc-dep ~ j ]

# install directories (these are suitable for ubuntu-64)
$destdir				= [ ]															# root install directory - does not affect runtime directories
$incdir					= [ /usr/include ]								# header files
$bindir					= [ /usr/local/bin ]							# executables
$libdir					= [ /usr/lib/x86_64-linux-gnu ]		# dynamically linked libraries
$mandir					= [ /usr/share/man ]							# man files

#
# configurable runtime directories
#  (that may be set at build-time)
#

# install-time values
$buildroot						 	= [ $* ~ can ]
$dlibdir								= [ /usr/lib ]										# dloaded libraries
$fabtmpdir							= [ /var/tmp/fab ]								# fab tmp
$fabtmpdir_devel				= [ /tmp/$fabtmpdir ~ j can ]			# fab tmp
$fabipcdir							= [ /var/run/fab ]
$fabipcdir_devel				= [ /tmp/$fabipcdir ~ j can ]			# fab shm/ipc files
$lwopdir								= [ $dlibdir/listwise ~ j can ]
$lwopdir_devel					= [ $dliblistwise/op ~ j can ]
$lwopext								= [ so ]
$fablwopdir							= [ $dlibdir/fab/listwise ~ j can ]
$fablwopdir_devel				= [ $dfabcore/fablw/op ~ j can ]
$fabinvokedir						= [ $dlibdir/fab/fablib ~ j can ]
$fabinvokedir_devel			= [ $dfabcore/fablib ~ j can ]

# compilers and their flags
$flex				= [ flex ]
$flexflags	= [ ]

$bison			= [ bison ]
$bisonflags	= [ --warnings=error ]

$cc					= [ gcc ]

# cflags options
$cflags				= [
	# universal compiler options
	[ -m64 -Wall -Werror -D_GNU_SOURCE -fplan9-extensions -fno-builtin-log ]

	# include paths
	[ $dcommon ~ lsr c -d s/^/-I ]

	# buildstamp
	[ -DBUILDSTAMP='[ $^starttime ~ datef ]' ~ j ]
]

# cflags options
$cflags_eapi  = [ -DXAPI_PROVIDE_ERRCODE ]
$cflags_xapi  = [ -DXAPI_PROVIDE_BACKTRACE ]

$cflags_final = [ -O3 ]
$cflags_debug = [ -O0 -ggdb3 -DDEBUG -DXAPI_RUNTIME_SANITY_CHECKS -DSANITY ]
$cflags_devel = [ -O0 -ggdb3 -DDEVEL -DXAPI_RUNTIME_SANITY_CHECKS -DSANITY [ -DBUILDROOT="\""$buildroot"\"" ~ j ] ]
$cflags_xunit = [ -O0 -ggdb3 -DXUNIT [ $dlibxunit ~ s/^/-I ] ]

# cflags variants
$cflags_eapi_final = [ $cflags $cflags_eapi $cflags_final ]
$cflags_eapi_debug = [ $cflags $cflags_eapi $cflags_debug ]
$cflags_eapi_devel = [ $cflags $cflags_eapi $cflags_devel ]
$cflags_xapi_final = [ $cflags $cflags_xapi $cflags_final ]
$cflags_xapi_debug = [ $cflags $cflags_xapi $cflags_debug ]
$cflags_xapi_devel = [ $cflags $cflags_xapi $cflags_devel ]
$cflags_xapi_xunit = [ $cflags $cflags_xapi $cflags_xunit ]
