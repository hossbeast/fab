'\"
.\" Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>
.\"
.\" This file is part of fab.
.\"
.\" fab is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" fab is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with fab.  If not, see <http://www.gnu.org/licenses/>. */
.\"
.de URL
\\$2 \(laURL: \\$1 \(ra\\$3
..
.if \n[.g] .mso www.tmac
.TH FAB 1 "---BUILDDATE---" "fab----BUILDVERS---" "Fab Manual"
.
.SH NAME
listwise \- list processing utility
.SH SYNOPSIS
.B listwise
.R [
.I option
.R |
.I logexpr
.R |
.I transform-string
.R ] ...
.PP
.B listwise
.B --help
: options summary
.br
.B listwise
.B --version
: version information
.br
.B listwise
.B --logs
: summary of logging options
.br
.B listwise
.B --ops
:
.BR listwise(1)
operator listing
.SH DESCRIPTION
.B listwise
takes a (possibly empty) input list and a
.BR listwise (3)
.I transform-string
as inputs.
.PP
.B listwise
executes the specified transformation and outputs the resulting list.
.PP
By default, the input list is read from stdin, and the
.I transform-string
is the concatenation of all command-line arguments that are not recognized as either \fIoption\fPs or \fIlogexpr\fPs.
.PP
.B listwise
can be used as an interpreter for #! scripts (see Examples).
.RS
.SH OPTIONS
.SS "General"
.TP
.BR \-s
output only selected entries (default)
.TP
.BR \-a
output entire list, not just selected entries
.TP
.BR \-k
output entire stack, not just top list
.TP
.BR \-n
number output rows 0 .. n (default)
.TP
.BR \-N
number output rows by list index
.TP
.BR \-Z
separate output rows by null byte instead of by newline
.TP
.BR \-A
process subsequent \fIpath\fP arguments line-wise (ascii) (default)
.TP
.BR \-0
process subsequent \fIpath\fP arguments null-wise
.TP
.BR +\fIint\fP
append subsequent non-options with priority \fIint\fP (default : 0)
.TP
.B \-t \fIarg\fP
add \fIarg\fP to transform-string (transform)
.TP
.BR +t
treat subsequent non-options as \-t \fIarg\fP (default)
.TP
.B \-T \fIpath\fP
read transform-string from \fIpath\fP
.TP
.BR +T
treat subsequent non-options as \-T \fIpath\fP
.TP
.B \-l \fIarg\fP
add \fIarg\fP to initial list (list)
.TP
.BR +l
treat subsequent non-options as \-l \fIarg\fP
.TP
.B \-L \fIpath\fP
read initial list from \fIpath\fP
.TP
.BR +L
treat subsequent non-options as \-L \fIpath\fP
.TP
.B \-H \fIpath\fP
read transform-string and initial list from \fIpath\fP (hybrid)
.TP
.BR +H
treat subsequent non-options as \-H \fIpath\fP
.
.SH "LOGEXPR"
Log expressions control which log messages are enabled
.TP
 \fB+\fR\fIlogcat
enable log messages tagged with the category \fIlogcat
.TP
 \fB-\fR\fIlogcat
disable log messages tagged with the category \fIlogcat
.SS Categories
.TP
.BR PARSE
display the parsed transform-string
.TP
.BR EXEC
step-by-step execution
.TP
.BR OPINFO
operator informational messages
.
.SH EXIT STATUS
An exit status of 0 means success.
.PP
An exit status > 127 means an error was encountered that is not specific to
.BR listwise .
.PP
An exit status < 128 means that one of the following \fBlistwise\fP-specific errors was encountered.
.TP
.RB (1) BADFILE
unable to process input file
.TP
.RB (2) BADARGS
invalid command-line arguments
.SH EXAMPLES
.PP
An example lw script to produce file listings, like ls(1)
.br
.B #!lw +l +1 -T
.br
.B -d
.br
.B ls
.br
.B c
.br
.B stat/F
.br
.B y
.br
.SH AUTHORS
Todd Freed
.MT todd.freed@gmail.com
.ME
.SH "SEE ALSO"
.BR fab(1)
.BR listwise(3)
.PP
.URL "http://fabutil.org" "fabutil.org"
