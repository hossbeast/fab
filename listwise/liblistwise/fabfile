/* Copyright (c) 2012-2013 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.
   
   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# source directories
$dcommon			= [ $*/../common ~ j ]
+[ $dcommon/vars.fab ]

# source invocations
+[ $dcommon ]() @common

$xunit = [ $dxunit/xunit ~ j ]
$libxapi = [ $dlibxapi/libxapi.so ~ j ]
$libxlinux = [ $dlibxlinux/libxlinux.so ~ j ]
$libpstring = [ $dlibpstring/libpstring.so ~ j ]
$libxunit = [ $dlibxunit/libxunit.so ~ j]

# variables
$libname 			= [ liblistwise.so ]
$soname				= [ $libname ~ j ]
$liblistwise  = [ $dliblistwise/liblistwise.so ~ j ]		# path to the library .so
$cflags				= [ $cflags -fPIC [ $dliblistwise ~ ls c -d s/^/-I ] [ -DLWOPDIR=$lwopdir ~ j ]
	# include paths - mark as system to preclude dependency discovery from gcc
	[ $dlibxapi $dlibxlinux $dlibpstring $dlibxunit ~ s/^/-isystem ]
]
$lflags				= [ -lpcre -ldl $libxapi $libxlinux $libpstring -shared [ -Wl,-soname,$soname ~ j ] ]

# source files
+[@std.c]($gendir = $dliblistwise; $filter = [ ~ ?{ cons{?, l,/test.c v} ]; $rdirs = $dliblistwise; $dext = [ pic.o ]; -$cfabpaths; $cc $cflags)
+[@std.l]($gendir = $dliblistwise; $rdirs = $dliblistwise; $dext = [ pic.o ]; -$lfabpaths; $cc $cflags $flex $flexflags)
+[@std.y]($gendir = $dliblistwise; $rdirs = $dliblistwise; $dext = [ pic.o ]; -$yfabpaths; $cc $cflags $bison $bisonflags)

# generated files
+[@std.flex.states] ($gendir = $dliblistwise; $rdirs = $dliblistwise; $dext = [ pic.o ]; $cc $cflags)
+[@std.bison.tokens]($gendir = $dliblistwise; $rdirs = $dliblistwise; $dext = [ pic.o ]; $cc $cflags)
+[@std.xapi.errtab] ($gendir = $dliblistwise; $rdirs = $dliblistwise; $dext = [ pic.o ]; $cc $cflags ; $fabpaths = [ $dliblistwise/error/PCRE.errtab ~ j ]; $apidata = [1])

# path to each operator so
$oplist = [ $dliblistwise ~ ??, s,$,/op lsr l,/test.c v sxf,c,so sy ]

# test sos
+[@std.xunit.tests](
	$rdirs = $dliblistwise;
	$cc;
	$xunit;
	$cflags = [ $cflags [ $dlibxunit ~ s/^/-isystem ] ];
	-$tobjpaths
)

# run all tests
[ @test ] : [ $liblistwise $oplist $tobjpaths ]
{
	[ $xunit ] +XUNIT [ $@ ~ rx/ineed fi ]
}

##
## dependencies
##

# build library and all operators
[ @all ] : [ $liblistwise $oplist ]

# library depends on .o for each c, l, and y
[ $liblistwise ] : [ $cfabpaths ~ ?, m,/op/ d sx,c,pic.o y ]
[ $liblistwise ] : [ $lfabpaths ~ sx/l/lex.pic.o y ]
[ $liblistwise ] : [ $yfabpaths ~ sx/y/tab.pic.o y ]

##
## formulas
##

# link the library
[ $liblistwise ]
{
	  (echo "{ global: "
	> sed 's/.*API\(DATA\)\?[[:space:]]\+\([a-zA-Z][0-9a-zA-Z_]*\).*/\2;/p; d' <(\
	  cat -- [ $@ ~ rx/aneedw lx/c ss u fi ] )
	> echo "local: *; };"
	 ) 1>[ $dliblistwise/exports ]

	[ $cc ] [ $cflags ~ uu fi ] -o [ $@ ] [ $@ ~ rx/aneedw lx/o uu fi ] [ $lflags ~ fi ] [ -Wl,--version-script=$dliblistwise/exports ]
}

# link an operator so - which depends on its own .o
[ $oplist ~ dj shift ] :: [ $< ~ rx sx/pic.o ]
{
	[ $cc ] [ $cflags ~ uu fi ] -o [ $@ ] [ $@ ~ rx/ineed ]	[ $@ ~ rx/aneedw m/liblistwise d lx/o ss u fi ] [ $liblistwise ] -shared [ "-Wl,-soname," [ $@ ~ rx bn fn ] .so ]
}

# operators also depend on the library for linking
[ $oplist ] :^ [ $liblistwise ]

# PCRE errtab is generated from their header file
[ $dliblistwise/error/PCRE.errtab ~ j ] : [ /usr/include/pcre.h ~ j ]
{
	exec 1>[ $@ ]
	> sed -e 's/#define \(PCRE_ERROR_[A-Z_]\+\) \+(\([-0-9]\+\)).*/\2\t\1/p; d' <\
	/usr/include/pcre.h
}

##
## tasks
##

[ @install ] : [ @all ]
{
	install -d																				[ $destdir/$libdir ]
	install [ $liblistwise ]													[ $destdir/$libdir/$libname ]

	rm -rf																						[ $destdir/$lwopdir ] 2>/dev/null
	install -d																				[ $destdir/$lwopdir ]
	for x in [ $oplist ~ fi ]; do \
		install $x																			[ $destdir/$lwopdir ]
	done
}

[ @installdevheaders ] 
{
	install -d																				[ $destdir/$incdir ]
	install [ $dliblistwise/listwise.h	]							[ $destdir/$incdir/listwise.h ]

	install -d																				[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/fs.h ]						[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/generator.h ]		[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/internal.h ]			[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/iterate.h ]			[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/lwx.h ]					[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/object.h ]				[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/operator.h ]			[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/ops.h ]					[ $destdir/$incdir/listwise ]
	install [ $dliblistwise/listwise/re.h ]						[ $destdir/$incdir/listwise ]
}
