/* Copyright (c) 2012-2015 Todd Freed <todd.freed@gmail.com>

   This file is part of fab.

   fab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   fab is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with fab.  If not, see <http://www.gnu.org/licenses/>. */

# @std.l.fab
#  provides discovery formula for .l files
#  provides fabrication formula for .lex.c -> .lex.o
#  provides dependencies for .lex.o -> .l

# var/closure
#  cc
#  cflags 
#  flex
#  flexflags
#
#  dirs       - directories containing .l files
#  rdirs      - directories containing .l files, recursive search
#  paths      - paths to .l files
#
#  dscdirs    - (as above, but for discovery only)
#  dscrdirs   - 
#  dscpaths   - 
#
#  fabdirs    - (as above, but for fabrication/dependency only)
#  fabrdirs   - 
#  fabpaths   - 
#

+[ $*/../../vars.fab ]

# default object file extensions
$dext = [ o ]

# paths to l files for discovery
$ldscpaths = [
	$paths				# paths
	$dscpaths			# paths, discovery only

	[
		$dirs				# directories
		$dscdirs		# directories, discovery only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rdscdirs		# recursive directories, discovery only
	~ lsr ]
~ lx/l ]

# paths to l files for fabrication
$lfabpaths = [
	$paths				# paths
	$fabpaths			# paths, discovery only

	[
		$dirs				# directories
		$fabdirs		# directories, discovery only
	~ ls ]

	[
		$rdirs			# recursive directories
		$rfabdirs		# recursive directories, discovery only
  ~ lsr ]
~ lx/l ]

# discovery
[ $ldscpaths ] %
{
		  [ $flex ] [ $flexflags ~ uu fi ] -t [ $@ ] [
	] | [ $cc ] [ $cflags ~ uu fi ] -MM -MP -MG -xc - [
	] | [ $gccdep ] [ $@ ~ [ rx [ sx/l/lex.$dext ~ j ] y fi ~ fi ] ] [ $dext ]
}

# $flex : l -> { lex.c, lex.h }
[ $lfabpaths ~ sx/l/lex.c sy uu v d cp u sx/lex.c/lex.h z dj/2 shift pop ] :: [ $< ~ rx sx/lex.c/l sx/lex.h/l ss u ]
{
	  [ $flex ] [ $flexflags ~ uu fi ] -o [ $@ ~ w/1/1 ] [
	] [ --header-file= [ $@ ~ w/0/1 ] ] [
	] [ $@ ~ rx/ineed lx/l ss u ]
}

# $cc : lex.c -> lex.o via std.c
+[@std.c](-$cobjpaths; $cfabpaths = [ $lfabpaths ~ sx/l/lex.c ]; $cc $cflags; $cdscpaths)
$lobjpaths = [ $cobjpaths ]
